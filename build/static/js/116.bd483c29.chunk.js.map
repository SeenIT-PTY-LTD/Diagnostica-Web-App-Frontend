{"version":3,"file":"static/js/116.bd483c29.chunk.js","mappings":"2LAOA,MAuHA,EAvHoBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,OACTC,GAAIC,IAAcC,EAAAA,EAAAA,MACpB,gBAAEC,IAAoBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,WAClDC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IAE3CC,EAAAA,EAAAA,WAAU,KACJT,GACFH,GAASa,EAAAA,EAAAA,IAAmBV,IAAYW,KAAK,IAAMJ,GAAa,KAEjE,CAACV,EAAUG,IAEd,MAAMY,EAAS,CACb,gBACA,OACA,MACA,SACA,QACA,kBACA,UACA,QACA,SACA,WACA,iBACA,MACA,QACA,UACA,WACA,SACA,OAEIC,EAAmB,sBAEnBC,EAAkBA,CAACC,EAAOC,KAC9B,OAAQD,GACN,IAAK,gBACH,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,UAChDF,EAAAA,EAAAA,KAAA,OACEG,IACEJ,EAAQK,aACJ,GAAGC,EAAAA,YAAcN,EAAQK,eACzBR,EAENU,IAAI,UACJL,UAAU,6DACVM,QAAUC,GAAOA,EAAEC,OAAON,IAAMP,MAIxC,IAAK,OACH,MAAO,GAAGG,EAAQW,aAAaX,EAAQY,WACzC,IAAK,MACH,OAAOZ,EAAQa,IACjB,IAAK,SACH,OAAOb,EAAQc,OACjB,IAAK,QACH,MAAO,GAAGd,EAAQe,eAAef,EAAQgB,QAC3C,IAAK,kBACH,OAAOhB,EAAQiB,YACjB,IAAK,UACH,OAAOjB,EAAQkB,QACjB,IAAK,QACH,OAAOlB,EAAQZ,MACjB,IAAK,SACH,OAAOY,EAAQmB,OAAS,GAAGnB,EAAQmB,YAAc,IACnD,IAAK,WAEL,IAAK,iBAcL,QACE,MAAO,IAbT,IAAK,MACH,OAAOnB,EAAQoB,IACjB,IAAK,QACH,OAAOpB,EAAQqB,MACjB,IAAK,UACH,OAAOrB,EAAQsB,QACjB,IAAK,WACH,OAAOtB,EAAQuB,SACjB,IAAK,SACH,OAAOvB,EAAQwB,OAAS,GAAGxB,EAAQwB,YAAc,IACnD,IAAK,MACH,OAAOxB,EAAQyB,KAAO,MAM5B,OAAKnC,GAOHW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0FAAyFC,UACtGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,SACpCjB,EAAgBwC,IAAK1B,GACpBJ,EAAO8B,IAAK3B,IACV4B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAzB,SAAA,EACEwB,EAAAA,EAAAA,MAAA,OAEEzB,UAAU,iHAAgHC,SAAA,EAE1HF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wDAAuDC,SACpEJ,KAEHE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wFAAuFC,SACpGL,EAAgBC,EAAOC,OAPrB,GAAGA,EAAQ6B,OAAO9B,MAUzBE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDArBvBD,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAAzB,UAAEF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAO,M","sources":["components/pages/Patients/PatientInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSinglePatient } from \"../../../redux/features/patient/patientApiSlice\";\nimport api from \"../../../utils/api\";\nimport Loading from \"../../../common/Loading\";\n\nconst PatientInfo = () => {\n  const dispatch = useDispatch();\n  const { id: patientId } = useParams();\n  const { selectedPatient } = useSelector((state) => state.patients);\n  const [formReady, setFormReady] = useState(false);\n\n  useEffect(() => {\n    if (patientId) {\n      dispatch(fetchSinglePatient(patientId)).then(() => setFormReady(true));\n    }\n  }, [dispatch, patientId]);\n\n  const labels = [\n    \"Profile Image\",\n    \"Name\",\n    \"DOB\",\n    \"Gender\",\n    \"Phone\",\n    \"Medicare Number\",\n    \"Address\",\n    \"State\",\n    \"Height\",\n    \"About Us\",\n    \"Doctor Details\",\n    \"URN\",\n    \"Email\",\n    \"Country\",\n    \"Postcode\",\n    \"Weight\",\n    \"BMI\",\n  ];\n  const placeholderImage = \"/default-avatar.png\"; // keep this in public folder\n\n  const getValueByLabel = (label, patient) => {\n    switch (label) {\n      case \"Profile Image\":\n        return (\n          <div className=\"flex justify-start sm:justify-end\">\n            <img\n              src={\n                patient.profileImage\n                  ? `${api}/images/${patient.profileImage}`\n                  : placeholderImage\n              }\n              alt=\"Profile\"\n              className=\"w-20 h-20 rounded-full object-cover border border-gray-300\"\n              onError={(e) => (e.target.src = placeholderImage)}\n            />\n          </div>\n        );\n      case \"Name\":\n        return `${patient.firstName} ${patient.lastName}`;\n      case \"DOB\":\n        return patient.dob;\n      case \"Gender\":\n        return patient.gender;\n      case \"Phone\":\n        return `${patient.countryCode} ${patient.phone}`;\n      case \"Medicare Number\":\n        return patient.patientCode;\n      case \"Address\":\n        return patient.address;\n      case \"State\":\n        return patient.state;\n      case \"Height\":\n        return patient.height ? `${patient.height} cm` : \"-\";\n      case \"About Us\":\n        return \"-\"; // Placeholder\n      case \"Doctor Details\":\n        return \"-\"; // Placeholder\n      case \"URN\":\n        return patient.urn;\n      case \"Email\":\n        return patient.email;\n      case \"Country\":\n        return patient.country;\n      case \"Postcode\":\n        return patient.postcode;\n      case \"Weight\":\n        return patient.weight ? `${patient.weight} kg` : \"-\";\n      case \"BMI\":\n        return patient.bmi || \"-\";\n      default:\n        return \"-\";\n    }\n  };\n\n  if (!formReady) {\n    return (\n      <><Loading /></>\n    );\n  }\n\n  return (\n    <div className=\"max-w-lg w-full mx-auto p-4 sm:p-5 bg-white rounded-lg border border-gray-200 shadow-sm\">\n      <div className=\"grid grid-cols-1 gap-3\">\n        {selectedPatient.map((patient) =>\n          labels.map((label) => (\n            <>\n              <div\n                key={`${patient._id}-${label}`}\n                className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center text-sm sm:text-base py-2 gap-1 sm:gap-3\"\n              >\n                <span className=\"font-medium text-gray-800 w-full sm:w-1/3 break-words\">\n                  {label}\n                </span>\n                <span className=\"text-gray-700 w-full sm:w-2/3 break-words whitespace-pre-wrap text-left sm:text-right\">\n                  {getValueByLabel(label, patient)}\n                </span>\n              </div>\n              <div className=\"w-full border-b border-gray-200 mt-0\"></div>\n            </>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PatientInfo;\n"],"names":["PatientInfo","dispatch","useDispatch","id","patientId","useParams","selectedPatient","useSelector","state","patients","formReady","setFormReady","useState","useEffect","fetchSinglePatient","then","labels","placeholderImage","getValueByLabel","label","patient","_jsx","className","children","src","profileImage","api","alt","onError","e","target","firstName","lastName","dob","gender","countryCode","phone","patientCode","address","height","urn","email","country","postcode","weight","bmi","map","_jsxs","_Fragment","_id","Loading"],"sourceRoot":""}